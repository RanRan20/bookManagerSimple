/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import book.book;
import book.bookController;
import java.awt.Image;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author DELL
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    public UI() {
      
        initComponents();
        loadTableData();
        setupTableListener();
        
        ImageIcon icon = new ImageIcon(getClass().getClassLoader().getResource("bookicon.png"));
        this.setIconImage(icon.getImage());
        
    
    }
   
    
   private void loadTableData() {
        bookController bookControler = new bookController();
        List<book> books = bookControler.getAllBooks();

        DefaultTableModel model = (DefaultTableModel) tableData.getModel();
        model.setRowCount(0);

        for (book b : books) {
            model.addRow(new Object[]{b.getId(), b.getName(), b.getAuthor(), b.getGenre(), b.getPrice()});
        }
    }
    
    private void setupTableListener() {
        tableData.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting() && tableData.getSelectedRow() != -1) {
                    int selectedRow = tableData.getSelectedRow();
                    textFieldId.setText(tableData.getValueAt(selectedRow, 0).toString());
                    fieldName.setText(tableData.getValueAt(selectedRow, 1).toString());
                    fieldAuthor.setText(tableData.getValueAt(selectedRow, 2).toString());
                    fieldGenre.setText(tableData.getValueAt(selectedRow, 3).toString());
                    fieldPrice.setText(tableData.getValueAt(selectedRow, 4).toString());
                }
            }
        });
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleProgram = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        labelPrice = new javax.swing.JLabel();
        labelName = new javax.swing.JLabel();
        labelGenre = new javax.swing.JLabel();
        fieldPrice = new javax.swing.JTextField();
        fieldName = new javax.swing.JTextField();
        fieldGenre = new javax.swing.JTextField();
        labelAuthor = new javax.swing.JLabel();
        fieldAuthor = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        clearButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        bookID = new javax.swing.JLabel();
        textFieldId = new javax.swing.JTextField();
        searchID = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titleProgram.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 48)); // NOI18N
        titleProgram.setText("LIBRARY");
        getContentPane().add(titleProgram, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 620, 20));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Register"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelPrice.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        labelPrice.setText("Price");
        jPanel1.add(labelPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, -1, -1));

        labelName.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        labelName.setText("Name");
        jPanel1.add(labelName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        labelGenre.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        labelGenre.setText("Genre");
        jPanel1.add(labelGenre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));
        jPanel1.add(fieldPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 220, -1));

        fieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNameActionPerformed(evt);
            }
        });
        jPanel1.add(fieldName, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 220, -1));
        jPanel1.add(fieldGenre, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, 220, -1));

        labelAuthor.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        labelAuthor.setText("Author");
        jPanel1.add(labelAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        fieldAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldAuthorActionPerformed(evt);
            }
        });
        jPanel1.add(fieldAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 220, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, 310, 250));

        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "name", "author", "genre", "price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableData);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 280, 240));

        clearButton.setBackground(new java.awt.Color(204, 204, 255));
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(clearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 360, 90, 30));

        deleteButton.setBackground(new java.awt.Color(204, 204, 255));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 370, 90, 30));

        exitButton.setBackground(new java.awt.Color(255, 102, 102));
        exitButton.setForeground(new java.awt.Color(255, 255, 255));
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bookID.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        bookID.setText("ID");
        jPanel2.add(bookID, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        textFieldId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldIdActionPerformed(evt);
            }
        });
        jPanel2.add(textFieldId, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 270, -1));

        searchID.setBackground(new java.awt.Color(204, 204, 255));
        searchID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchIDActionPerformed(evt);
            }
        });
        jPanel2.add(searchID, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 20, 20));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, 360, 50));

        jButton4.setBackground(new java.awt.Color(102, 255, 102));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Save");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 360, 90, 30));

        updateButton.setBackground(new java.awt.Color(204, 204, 255));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 90, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
    
    try {
        int id = Integer.parseInt(textFieldId.getText());
        String name = fieldName.getText();
        String author = fieldAuthor.getText();
        String genre = fieldGenre.getText();
        double price = Double.parseDouble(fieldPrice.getText());

        book book = new book(id, name, author,genre, price);

        bookController bookControler = new bookController();
        boolean updated = bookControler.updateBook(book);

        if (updated) {
            JOptionPane.showMessageDialog(this, "Libro actualizado correctamente");
            loadTableData();
        } else {
            JOptionPane.showMessageDialog(this, "ha ocurrdo un error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "introduzca un id valido.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void fieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldNameActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String name = fieldName.getText();
        String author = fieldAuthor.getText();
        String genre = fieldGenre.getText();
        double price = Double.parseDouble(fieldPrice.getText());

        if(name.isEmpty() || author.isEmpty() || genre.isEmpty() || fieldPrice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "todos los campos son obligatorios", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        book book = new book(0, name, author, genre, price); 

        bookController bookControler = new bookController();
        boolean saved = bookControler.saveBook(book);

        if (saved) {
            JOptionPane.showMessageDialog(this, "se ha guardado el libro correctamente");
            fieldName.setText("");
            fieldAuthor.setText("");
            fieldGenre.setText("");
            fieldPrice.setText("");
            loadTableData();
        } else {
            JOptionPane.showMessageDialog(this, "ha ocurrido un error", "Error", JOptionPane.ERROR_MESSAGE);
        }
   
    }//GEN-LAST:event_jButton4ActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
try {
        int id = Integer.parseInt(textFieldId.getText());

        bookController bookControler = new bookController();
        boolean deleted = bookControler.deleteBook(id);

        if (deleted) {
            JOptionPane.showMessageDialog(this, "se ha eliminado el libro correctamente");
            loadTableData();
            textFieldId.setText("");
            fieldName.setText("");
            fieldAuthor.setText("");
            fieldGenre.setText("");
            fieldPrice.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Ha ocurrido un error.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "introduzca un ID válido.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
         bookController bookControler = new bookController();
    boolean cleared = bookControler.deleteAllBooks();

    if (cleared) {
        JOptionPane.showMessageDialog(this, "se han eliminado todos los libros");
        loadTableData();
    } else {
        JOptionPane.showMessageDialog(this, "Ha ocurrido un error", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_clearButtonActionPerformed

    private void searchIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchIDActionPerformed
try {
        int id = Integer.parseInt(textFieldId.getText());
        DefaultTableModel model = (DefaultTableModel) tableData.getModel();
        boolean found = false;
        
        for (int i = 0; i < model.getRowCount(); i++) {
            if (Integer.parseInt(model.getValueAt(i, 0).toString()) == id) {
                tableData.setRowSelectionInterval(i, i);
                textFieldId.setText(model.getValueAt(i, 0).toString());
                fieldName.setText(model.getValueAt(i, 1).toString());
                fieldAuthor.setText(model.getValueAt(i, 2).toString());
                fieldGenre.setText(model.getValueAt(i, 3).toString());
                fieldPrice.setText(model.getValueAt(i, 4).toString());
                found = true;
                break;
            }
        }
        
        if (!found) {
            JOptionPane.showMessageDialog(this, "ID no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "introduzca un ID válido", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_searchIDActionPerformed

    private void textFieldIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldIdActionPerformed

    private void fieldAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldAuthorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bookID;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JTextField fieldAuthor;
    private javax.swing.JTextField fieldGenre;
    private javax.swing.JTextField fieldName;
    private javax.swing.JTextField fieldPrice;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelAuthor;
    private javax.swing.JLabel labelGenre;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPrice;
    private javax.swing.JButton searchID;
    private javax.swing.JTable tableData;
    private javax.swing.JTextField textFieldId;
    private javax.swing.JLabel titleProgram;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
